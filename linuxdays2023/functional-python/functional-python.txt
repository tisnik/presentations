        Funkcionální programování v Pythonu
══════════════════════════════════════════════════
■ Autor    Pavel Tišnovský
■ Email    <tisnik 0x40 centrum 0x2e cz>
■ Datum    2023-10-07

Obsah přednášky (1)
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
▶ Programovací jazyk Python
▶ Funkcionální programování

Programovací jazyk Python
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
▶ Typické použití Pythonu
    ◆ Nástroje a utility ovládané z příkazového řádku
    ◆ Aplikace s grafickým uživatelským rozhraním
    ◆ Client-server
        - serverová část (Flask, Django, CherryPy, ...)
        - klient (Brython, spíše technologické demo)
    ◆ Numerické výpočty, symbolické výpočty
        - NumPy
        - SciPy
        - Matplotlib
    ◆ Moderní způsoby využití Pythonu
        - AI
        - Machine Learning (Deep Learning)
          PyTorch
        - Big data
    ◆ Tzv. „glue“ jazyk
    ◆ Vestavitelný interpret Pythonu

Funkcionální programování
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
▶ Funkce jsou plnohodnotnými typy
▶ Čisté funkce (bez vedlejších efektů)
    ◆ referenční průhlednost (transparency)
    ◆ volání funkce s danými parametry lze nahradit za výsledek
▶ Preferuje se použití neměnitelných hodnot
    ◆ immutable values/variables
    ◆ čistě funkcionální datové struktury

Proč funkcionální programování?
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
▶ Funkce bez vedlejších efektů se snadno testují
▶ Funkce bez vedlejších efektů se snadno ladí
▶ Stav aplikace je izolován
▶ Zajištěn souběh či paralelní běh částí programu

