
intrinsic_f16c_1.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
#include <stdio.h>
#include <immintrin.h>

int main(void)
{
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   rbp
   5:	48 89 e5             	mov    rbp,rsp
   8:	48 83 ec 50          	sub    rsp,0x50
   c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  13:	00 00 
  15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  19:	31 c0                	xor    eax,eax
    __v4sf x = { 0.0, 0.1, 1.0, 3.14 };
  1b:	c5 f8 28 05 00 00 00 	vmovaps xmm0,XMMWORD PTR [rip+0x0]        # 23 <main+0x23>
  22:	00 
  23:	c5 f8 29 45 c0       	vmovaps XMMWORD PTR [rbp-0x40],xmm0
    __v8hi half;
    __v4sf y;
    int i;

    // konverze float -> half
    half = __builtin_ia32_vcvtps2ph(x, 0);
  28:	c5 f8 28 45 c0       	vmovaps xmm0,XMMWORD PTR [rbp-0x40]
  2d:	c4 e3 79 1d c0 00    	vcvtps2ph xmm0,xmm0,0x0
  33:	c5 f8 29 45 d0       	vmovaps XMMWORD PTR [rbp-0x30],xmm0

    // konverze half -> float
    y = __builtin_ia32_vcvtph2ps(half);
  38:	c5 f9 6f 45 d0       	vmovdqa xmm0,XMMWORD PTR [rbp-0x30]
  3d:	c4 e2 79 13 c0       	vcvtph2ps xmm0,xmm0
  42:	c5 f8 29 45 e0       	vmovaps XMMWORD PTR [rbp-0x20],xmm0

    for (i = 0; i < sizeof(x) / sizeof(float); i++) {
  47:	c7 45 bc 00 00 00 00 	mov    DWORD PTR [rbp-0x44],0x0
  4e:	eb 45                	jmp    95 <main+0x95>
        printf("%2d   %f   %04x   %f\n", i, x[i], half[i], y[i]);
  50:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
  53:	48 98                	cdqe   
  55:	c5 fa 10 44 85 e0    	vmovss xmm0,DWORD PTR [rbp+rax*4-0x20]
  5b:	c5 fa 5a c8          	vcvtss2sd xmm1,xmm0,xmm0
  5f:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
  62:	48 98                	cdqe   
  64:	0f b7 44 45 d0       	movzx  eax,WORD PTR [rbp+rax*2-0x30]
  69:	0f bf d0             	movsx  edx,ax
  6c:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
  6f:	48 98                	cdqe   
  71:	c5 fa 10 44 85 c0    	vmovss xmm0,DWORD PTR [rbp+rax*4-0x40]
  77:	c5 fa 5a c0          	vcvtss2sd xmm0,xmm0,xmm0
  7b:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
  7e:	89 c6                	mov    esi,eax
  80:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # 87 <main+0x87>
  87:	b8 02 00 00 00       	mov    eax,0x2
  8c:	e8 00 00 00 00       	call   91 <main+0x91>
    for (i = 0; i < sizeof(x) / sizeof(float); i++) {
  91:	83 45 bc 01          	add    DWORD PTR [rbp-0x44],0x1
  95:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
  98:	83 f8 03             	cmp    eax,0x3
  9b:	76 b3                	jbe    50 <main+0x50>
    }
    return 0;
  9d:	b8 00 00 00 00       	mov    eax,0x0
}
  a2:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  a6:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
  ad:	00 00 
  af:	74 05                	je     b6 <main+0xb6>
  b1:	e8 00 00 00 00       	call   b6 <main+0xb6>
  b6:	c9                   	leave  
  b7:	c3                   	ret    
