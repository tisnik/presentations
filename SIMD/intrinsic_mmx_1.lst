
intrinsic_mmx_1.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
#include <stdio.h>
#include <mmintrin.h>

int main(void)
{
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   rbp
   5:	48 89 e5             	mov    rbp,rsp
   8:	48 83 ec 30          	sub    rsp,0x30
   c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  13:	00 00 
  15:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  19:	31 c0                	xor    eax,eax
    __v8qi x = {1,2,3,4,5,6,7,8};
  1b:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 22 <main+0x22>
  22:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
    __v8qi y = {1,2,3,4,5,6,7,8};
  26:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 2d <main+0x2d>
  2d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    __v8qi z;
    int i;

    z = __builtin_ia32_paddb(x, y);
  31:	0f 6f 45 e8          	movq   mm0,QWORD PTR [rbp-0x18]
  35:	0f fc 45 f0          	paddb  mm0,QWORD PTR [rbp-0x10]
  39:	0f 7f 45 e0          	movq   QWORD PTR [rbp-0x20],mm0

    for (i=0; i<8; i++) {
  3d:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
  44:	eb 27                	jmp    6d <main+0x6d>
        printf("%d %d\n", i, z[i]);
  46:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  49:	48 98                	cdqe   
  4b:	0f b6 44 05 e0       	movzx  eax,BYTE PTR [rbp+rax*1-0x20]
  50:	0f be d0             	movsx  edx,al
  53:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  56:	89 c6                	mov    esi,eax
  58:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # 5f <main+0x5f>
  5f:	b8 00 00 00 00       	mov    eax,0x0
  64:	e8 00 00 00 00       	call   69 <main+0x69>
    for (i=0; i<8; i++) {
  69:	83 45 dc 01          	add    DWORD PTR [rbp-0x24],0x1
  6d:	83 7d dc 07          	cmp    DWORD PTR [rbp-0x24],0x7
  71:	7e d3                	jle    46 <main+0x46>
  73:	b8 00 00 00 00       	mov    eax,0x0
    }
}
  78:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  7c:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
  83:	00 00 
  85:	74 05                	je     8c <main+0x8c>
  87:	e8 00 00 00 00       	call   8c <main+0x8c>
  8c:	c9                   	leave  
  8d:	c3                   	ret    
