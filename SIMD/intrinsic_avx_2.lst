
intrinsic_avx_2.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
#include <stdio.h>
#include <immintrin.h>

int main(void)
{
   0:	f3 0f 1e fa          	endbr64 
   4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
   9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
   d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
  11:	55                   	push   rbp
  12:	48 89 e5             	mov    rbp,rsp
  15:	41 52                	push   r10
  17:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
  1e:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  25:	00 00 
  27:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  2b:	31 c0                	xor    eax,eax
    __v4df x = { 1.0, 2.0, 3.0, 4.0 };
  2d:	c5 fd 28 05 00 00 00 	vmovapd ymm0,YMMWORD PTR [rip+0x0]        # 35 <main+0x35>
  34:	00 
  35:	c5 fd 29 85 70 ff ff 	vmovapd YMMWORD PTR [rbp-0x90],ymm0
  3c:	ff 
    __v4df y = { 0.1, 0.1, 0.1, 0.1 };
  3d:	c5 fd 28 05 00 00 00 	vmovapd ymm0,YMMWORD PTR [rip+0x0]        # 45 <main+0x45>
  44:	00 
  45:	c5 fd 29 45 90       	vmovapd YMMWORD PTR [rbp-0x70],ymm0
    __v4df z;
    int i;

    z = __builtin_ia32_addpd256(x, y);
  4a:	c5 fd 28 45 90       	vmovapd ymm0,YMMWORD PTR [rbp-0x70]
  4f:	c5 fd 28 8d 70 ff ff 	vmovapd ymm1,YMMWORD PTR [rbp-0x90]
  56:	ff 
  57:	c5 f5 58 c0          	vaddpd ymm0,ymm1,ymm0
  5b:	c5 fd 29 45 b0       	vmovapd YMMWORD PTR [rbp-0x50],ymm0

    for (i = 0; i < sizeof(x) / sizeof(double); i++) {
  60:	c7 85 6c ff ff ff 00 	mov    DWORD PTR [rbp-0x94],0x0
  67:	00 00 00 
  6a:	eb 59                	jmp    c5 <main+0xc5>
        printf("%2d %f %f %f\n", i, x[i], y[i], z[i]);
  6c:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
  72:	48 98                	cdqe   
  74:	c5 fb 10 4c c5 b0    	vmovsd xmm1,QWORD PTR [rbp+rax*8-0x50]
  7a:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
  80:	48 98                	cdqe   
  82:	c5 fb 10 44 c5 90    	vmovsd xmm0,QWORD PTR [rbp+rax*8-0x70]
  88:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
  8e:	48 98                	cdqe   
  90:	48 8b 94 c5 70 ff ff 	mov    rdx,QWORD PTR [rbp+rax*8-0x90]
  97:	ff 
  98:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
  9e:	c5 f9 28 d1          	vmovapd xmm2,xmm1
  a2:	c5 f9 28 c8          	vmovapd xmm1,xmm0
  a6:	c4 e1 f9 6e c2       	vmovq  xmm0,rdx
  ab:	89 c6                	mov    esi,eax
  ad:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # b4 <main+0xb4>
  b4:	b8 03 00 00 00       	mov    eax,0x3
  b9:	e8 00 00 00 00       	call   be <main+0xbe>
    for (i = 0; i < sizeof(x) / sizeof(double); i++) {
  be:	83 85 6c ff ff ff 01 	add    DWORD PTR [rbp-0x94],0x1
  c5:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [rbp-0x94]
  cb:	83 f8 03             	cmp    eax,0x3
  ce:	76 9c                	jbe    6c <main+0x6c>
  d0:	b8 00 00 00 00       	mov    eax,0x0
    }
}
  d5:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  d9:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
  e0:	00 00 
  e2:	74 05                	je     e9 <main+0xe9>
  e4:	e8 00 00 00 00       	call   e9 <main+0xe9>
  e9:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
  f0:	41 5a                	pop    r10
  f2:	5d                   	pop    rbp
  f3:	49 8d 62 f8          	lea    rsp,[r10-0x8]
  f7:	c3                   	ret    
