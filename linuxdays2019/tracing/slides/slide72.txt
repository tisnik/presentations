
Statistické informace vypsané po ukončení procesu
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
global reads
global writes
global read_write_count=0
   
probe syscall.open
{
    filename = user_string($filename);
    printf("ls opened file %s\n", filename);
}
probe syscall.read
{
    bytes=$count
    into=$fd
    reads <<< bytes
    printf("read %d bytes from file descriptor %d\n", bytes, into);
    read_write_count++
    if (read_write_count>10000) exit()
}
probe syscall.write
{
    bytes=$count
    into=$fd
    writes <<< bytes
    printf("write %d bytes to file descriptor %d\n", bytes, into);
    read_write_count++
    if (read_write_count>10000) exit()
}
probe end
{
    println("Reads:")
    printf("Count: %d operations\n", @count(reads))
    printf("Total: %d bytes\n", @sum(reads))
    printf("Min:   %d bytes\n", @min(reads))
    printf("Max:   %d bytes\n", @max(reads))
    printf("Avg:   %d bytes/operation\n", @avg(reads))
    println()
    println("Writes:")
    printf("Count: %d operations\n", @count(writes))
    printf("Total: %d bytes\n", @sum(writes))
    printf("Min:   %d bytes\n", @min(writes))
    printf("Max:   %d bytes\n", @max(writes))
    printf("Avg:   %d bytes/operation\n", @avg(writes))
}
